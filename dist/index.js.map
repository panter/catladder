{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import minimist from 'minimist';\nimport prompt from 'prompt';\nimport remoteExec from 'ssh-exec';\nimport _ from 'lodash';\nimport yaml from 'js-yaml';\nimport fs from 'fs';\nimport { execSync, spawnSync } from 'child_process';\n\nimport { version } from '../package.json';\n\nconst CONFIGFILE = '.catladder.yaml';\nconst options = minimist(process.argv.slice(2));\nconst writeConfig = config => fs.writeFile(CONFIGFILE, yaml.safeDump(config), (err) => {\n  if (err) {\n    return console.log(err);\n  }\n});\nconst readConfig = () => yaml.safeLoad(fs.readFileSync(CONFIGFILE));\nconst readPass = (path) => {\n  try {\n    return execSync(`pass show ${path}`, { stdio: [0], encoding: 'utf-8' });\n  } catch (error) {\n    if (error.message.indexOf('is not in the password store') !== -1) {\n      return null;\n    }\n    throw error;\n  }\n};\n\nconst writePass = (path, input) => {\n  console.log('writing to pass', path);\n  execSync(`pass insert ${path} -m`, { input });\n};\n\nconst editPass = (path) => {\n  spawnSync('pass', ['edit', path], {\n    stdio: 'inherit',\n  });\n};\nconst initSchema = {\n  properties: {\n    customer: {\n      description: 'Customer kÃ¼rzel',\n      required: true,\n      default: 'pan',\n    },\n    appname: {\n      description: 'App name (for dbs, filenames, etc.)',\n      type: 'string',\n      required: true,\n      pattern: /^[a-zA-Z]+$/,\n    },\n    passPath: {\n      description: 'Path in pass',\n      required: true,\n      default: () => `${prompt.history('customer').value}/${prompt.history('appname').value}`,\n    },\n    environments: {\n      description: 'environments',\n      type: 'string',\n      required: true,\n      pattern: /^[a-z,\\s]+$/,\n      default: 'staging, production',\n      before: v => v.split(',').map(_.trim),\n    },\n  },\n};\n\n\nconst environmentSchema = ({ environment, appname }) => ({\n  properties: {\n    host: {\n      description: 'ssh host',\n      type: 'string',\n      required: true,\n      default: `${appname}-${environment}.panter.biz`,\n    },\n    user: {\n      description: 'ssh user',\n      default: 'app',\n    },\n    url: {\n      description: 'full url',\n      default: () => `https://${prompt.history('host').value}`,\n    },\n  },\n});\n\nconst defaultEnv = ({ config, envConfig }) => ({\n  PORT: 8080,\n  MONGO_URL: `mongodb://localhost/${config.appname}`,\n  MONGO_OPLOG_URL: 'mongodb://localhost/local',\n  MAIL_URL: 'smtp://localhost:25',\n  ROOT_URL: envConfig.url,\n  METEOR_SETTINGS: {\n  },\n});\n\nconst withDefaults = (schema, defaults = {}) => ({\n  ...schema,\n  properties: _.mapValues(schema.properties, (value, key) => ({\n    ...value,\n    default: () => defaults[key] || _.result(value, 'default'),\n  })),\n});\n\nconst createEnvSh = (envVars) => {\n  const getSanitziedValue = (value) => {\n    if (_.isObject(value)) {\n      return JSON.stringify(value);\n    }\n    return value;\n  };\n  return _.keys(envVars).map((key) => {\n    const value = getSanitziedValue(envVars[key]);\n    return `export ${key}='${value}'`;\n  }).join('\\n');\n};\n\nconst actions = {\n  init() {\n    const config = (fs.existsSync(CONFIGFILE) && readConfig()) || {};\n    prompt.start();\n    prompt.get(withDefaults(initSchema, config), (error,\n      { customer, appname, passPath, environments },\n    ) => {\n      const configFile = {\n        appname,\n        customer,\n        passPath,\n        environments: _.chain(environments).keyBy().mapValues(() => ({})).value(),\n      };\n      writeConfig(configFile);\n      console.log(`created ${CONFIGFILE}`);\n    });\n  },\n  setup(environments) {\n    const config = readConfig();\n    prompt.start();\n    environments.forEach((environment) => {\n      console.log('setting up', environment);\n      const passPathForEnvVars = `${config.passPath}/${environment}.yaml`;\n      // console.log(passPathForEnvVars);\n      prompt.get(environmentSchema({ ...config, environment }), (error, envConfig) => {\n        // write envConfig\n        writeConfig({\n          ...config,\n          [environment]: envConfig,\n        });\n        let envVars = yaml.safeLoad(readPass(passPathForEnvVars));\n\n        if (_.isEmpty(envVars)) {\n          envVars = defaultEnv({ config, envConfig });\n          writePass(passPathForEnvVars, yaml.safeDump(envVars));\n        }\n\n        editPass(passPathForEnvVars);\n        const envSh = createEnvSh(yaml.safeLoad(readPass(passPathForEnvVars)));\n        // create env.sh on server\n        const sshConf = _.pick(envConfig, ['host', 'user', 'password', 'key']);\n        remoteExec(`echo \"${envSh}\" > ~/app/env.sh`, sshConf);\n        console.log('~/app/env.sh has ben written on ', envConfig.host);\n        console.log('you need to restart the server');\n      });\n    });\n  },\n  restart(environments) {\n    const config = readConfig();\n    environments.forEach((environment) => {\n      console.log(config, environment);\n      remoteExec('');\n    });\n  },\n\n\n};\nconst [command, ...args] = options._;\nconsole.log('');\nconsole.log('                                ð± ð§');\nconsole.log('         ââââ PANTER CATLADDER âââââ');\nconsole.log('       âââ');\nconsole.log(`     âââ          v${version}`);\nconsole.log('   âââ');\nconsole.log(' âââ');\nconsole.log('ââ');\nconsole.log('');\nif (actions[command]) {\n  actions[command](args);\n}\n"]}