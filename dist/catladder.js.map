{"version":3,"sources":["../src/catladder.js"],"names":[],"mappings":"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","file":"catladder.js","sourcesContent":["import minimist from 'minimist';\nimport prompt from 'prompt';\nimport colors from 'colors/safe';\nimport remoteExec from 'ssh-exec';\nimport _ from 'lodash';\nimport yaml from 'js-yaml';\nimport fs from 'fs';\nimport path from 'path';\nimport { execSync, spawnSync } from 'child_process';\n\nimport { version } from '../package.json';\n\nconst intro = line => console.log(colors.yellow(line));\nconst actionTitle = (title) => {\n  intro('');\n  intro(`🐱 🔧 ${title}`);\n  intro('');\n};\n\nconst CONFIGFILE = '.catladder.yaml';\nconst options = minimist(process.argv.slice(2));\nconst writeConfig = (config) => {\n  const theyaml = yaml.safeDump(config);\n  fs.writeFileSync(CONFIGFILE, theyaml);\n};\nconst readConfig = () => yaml.safeLoad(fs.readFileSync(CONFIGFILE));\nconst readPass = (passPath) => {\n  try {\n    return execSync(`pass show ${passPath}`, { stdio: [0], encoding: 'utf-8' });\n  } catch (error) {\n    if (error.message.indexOf('is not in the password store') !== -1) {\n      return null;\n    }\n    throw error;\n  }\n};\n\nconst writePass = (passPath, input) => {\n  console.log('writing to pass', passPath);\n  execSync(`pass insert ${path} -m`, { input });\n};\n\nconst editPass = (passPath) => {\n  spawnSync('pass', ['edit', passPath], {\n    stdio: 'inherit',\n  });\n};\n\nconst withDefaults = (schema, defaults = {}) => ({\n  ...schema,\n  properties: _.mapValues(schema.properties, (value, key) => ({\n    ...value,\n    default: () => defaults[key] || _.result(value, 'default'),\n  })),\n});\n\nconst initSchema = config => withDefaults({\n  properties: {\n    customer: {\n      description: 'Customer kürzel',\n      required: true,\n      default: 'pan',\n    },\n    appname: {\n      description: 'App name (for dbs, filenames, etc.)',\n      type: 'string',\n      required: true,\n      pattern: /^[a-zA-Z]+$/,\n    },\n    passPath: {\n      description: 'Path in pass',\n      required: true,\n      default: () => `${prompt.history('customer').value}/${prompt.history('appname').value}`,\n    },\n    appDir: {\n      description: 'app directory',\n      type: 'string',\n      default: './app',\n    },\n    buildDir: {\n      description: 'build directory',\n      type: 'string',\n      default: './build',\n    },\n  },\n}, config);\n\nconst environmentSchema = ({ environment, appname, ...config }) => withDefaults({\n  properties: {\n    host: {\n      description: 'ssh host',\n      type: 'string',\n      required: true,\n      default: `${appname}-${environment}.panter.biz`,\n    },\n    user: {\n      description: 'ssh user',\n      default: 'app',\n    },\n    url: {\n      description: 'full url',\n      default: () => `https://${prompt.history('host').value}`,\n    },\n  },\n}, config[environment]);\n\nconst defaultEnv = ({ config, envConfig }) => ({\n  PORT: 8080,\n  MONGO_URL: `mongodb://localhost/${config.appname}`,\n  MONGO_OPLOG_URL: 'mongodb://localhost/local',\n  MAIL_URL: 'smtp://localhost:25',\n  ROOT_URL: envConfig.url,\n  METEOR_SETTINGS: {\n  },\n});\n\n\nconst createEnvSh = (envVars) => {\n  const getSanitziedValue = (value) => {\n    if (_.isObject(value)) {\n      return JSON.stringify(value);\n    }\n    return value;\n  };\n  return _.keys(envVars).map((key) => {\n    const value = getSanitziedValue(envVars[key]);\n    return `export ${key}='${value}'`;\n  }).join('\\n');\n};\n\nconst getSshConfig = (environment) => {\n  const config = readConfig();\n  return _.pick(\n    config.environments[environment],\n    ['host', 'user', 'password', 'key'],\n  );\n};\n\nconst actions = {\n  init(__, done) {\n    const configOld = (fs.existsSync(CONFIGFILE) && readConfig()) || {};\n    prompt.start();\n    prompt.get(initSchema(configOld), (error,\n      configNew,\n    ) => {\n      const config = {\n        ...configOld,\n        ...configNew,\n      };\n      writeConfig(config);\n      const buildDir = path.resolve(config.buildDir);\n      if (!fs.existsSync(buildDir)) {\n        fs.mkdirSync(buildDir);\n      }\n      console.log(`created ${CONFIGFILE}`);\n      done();\n    });\n  },\n  setup(environments, done) {\n    const config = readConfig();\n    prompt.start();\n    environments.forEach((environment) => {\n      actionTitle(`setting up ${environment}`);\n      const passPathForEnvVars = `${config.passPath}/${environment}.yaml`;\n      // console.log(passPathForEnvVars);\n      prompt.get(environmentSchema({ ...config, environment }), (error, envConfig) => {\n        // write new envConfig\n        config.environments = {\n          ...config.environments,\n          [environment]: envConfig,\n        };\n\n        writeConfig({\n          ...config,\n          environments: {\n            ...config.environments,\n            [environment]: envConfig,\n          },\n        });\n        // update env-vars in path\n        // first get current vars in path\n        let envVars = yaml.safeLoad(readPass(passPathForEnvVars));\n        // if envVars do not exist yet, create new one and write to pass\n        if (_.isEmpty(envVars)) {\n          envVars = defaultEnv({ config, envConfig });\n          writePass(passPathForEnvVars, yaml.safeDump(envVars));\n        }\n        // open editor to edit the en vars\n        editPass(passPathForEnvVars);\n        // load changed envVars and create env.sh on server\n        const envSh = createEnvSh(yaml.safeLoad(readPass(passPathForEnvVars)));\n        // create env.sh on server\n        remoteExec(`echo \"${envSh.replace(/\"/g, '\\\\\"')}\" > ~/app/env.sh`, getSshConfig(environment), (err) => {\n          if (err) {\n            throw err;\n          }\n          console.log('');\n          console.log('~/app/env.sh has ben written on ', envConfig.host);\n          console.log('you need to restart the server');\n          done();\n        }).pipe(process.stdout);\n      });\n    });\n  },\n  restart(environment, done) {\n    actionTitle(`restarting ${environment}`);\n    remoteExec('./bin/nodejs.sh restart', getSshConfig(environment), done).pipe(process.stdout);\n  },\n  build(environment, done) {\n    const config = readConfig();\n\n    const envConf = config.environments[environment];\n    const buildDir = path.resolve(`${config.buildDir}/${environment}`);\n    actionTitle(`building ${environment}`);\n    console.log(`build dir: ${buildDir}`);\n    execSync('meteor npm install', { cwd: config.appDir, stdio: [0, 1, 2] });\n    execSync(\n        `meteor build --server ${envConf.url} ${buildDir}`,\n        { cwd: config.appDir, stdio: [0, 1, 2] },\n      );\n    done();\n  },\n  deploy(environment, done) {\n    const next = () => actions.restart(environment, done);\n    const config = readConfig();\n\n      // const envConf = config.environments[environment];\n    const sshConfig = getSshConfig(environment);\n    actionTitle(`deploying ${environment}`);\n    execSync(`scp ${config.buildDir}/${environment}/app.tar.gz ${sshConfig.user}@${sshConfig.host}:`, { stdio: [0, 1, 2] });\n    remoteExec(`\n        rm -rf ~/app/last\n        mv ~/app/bundle ~/app/last\n        tar xfz app.tar.gz -C app\n        pushd ~/app/bundle/programs/server\n        npm install\n        popd\n      `, sshConfig, next).pipe(process.stdout);\n  },\n  'build-deploy': function (environment, done) {\n    actions.build(environment, () => {\n      actions.deploy(environment, done);\n    });\n  },\n\n\n};\nconst [command, environment] = options._;\n\nintro('');\nintro('                                🐱 🔧');\nintro('         ╔═══ PANTER CATLADDER ═════');\nintro('       ╔═╝');\nintro(`     ╔═╝          v${version}`);\nintro('   ╔═╝');\nintro(' ╔═╝');\nintro('═╝');\nintro('');\n\nconst done = () => {\n  intro('');\n  intro('╗');\n  intro('╚═╗                      👋 🐱');\n  intro('  ╚══════════════════════════════════');\n};\nif (actions[command]) {\n  actions[command](environment, done);\n} else {\n  console.log('available commands: ');\n  console.log('');\n  console.log(_.keys(actions).join('\\n'));\n  done();\n}\n"]}