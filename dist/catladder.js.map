{"version":3,"sources":["../src/catladder.js"],"names":[],"mappings":";;;;;;;;sBAAc,QAAQ;;;;yBACA,WAAW;;;;wBACZ,UAAU;;;;wBAEL,YAAY;;IAA1B,QAAQ;;4BACE,iBAAiB;;;;8BACf,mBAAmB;;;;uBACzB,YAAY;;;;;AAG9B,IAAM,OAAO,GAAG,2BAAS,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;gCAEd,OAAO,CAAC,CAAC;;IAApC,UAAU;IAAE,WAAW;;AAE9B,IAAM,OAAO,GACX,OAAO,CAAC,CAAC,GAAG,SAAS,GACnB,UAAU,IAAI,4BAAU,UAAU,CAAC,AACtC,CAAC;;;AAGF,2BAAO,CAAC;;AAGR,IAAM,IAAI,GAAG,SAAP,IAAI,CAAI,KAAK,EAAE,OAAO,EAAK;AAC/B,MAAI,CAAC,KAAK,EAAE;AACV,qCAAY,OAAO,CAAC,CAAC;GACtB,MAAM;AACL,mCAAU,KAAK,EAAE,OAAO,CAAC,CAAC;GAC3B;CACF,CAAC;;AAEF,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE;AACrB,MAAI,OAAO,KAAK,MAAM,IAAI,OAAO,KAAK,SAAS,IAAI,CAAC,WAAW,EAAE;AAC/D,mCAAU,IAAI,EAAE,+BAA+B,CAAC,CAAC;GAClD,MAAM;AACL,QAAI;AACF,cAAQ,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;KACtC,CAAC,OAAO,CAAC,EAAE;AACV,UAAI,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;KAC3B;GACF;CACF,MAAM;AACL,SAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACpC,SAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAChB,SAAO,CAAC,GAAG,CAAC,oBAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACzC,MAAI,EAAE,CAAC;CACR","file":"catladder.js","sourcesContent":["import _ from 'lodash';\nimport camelCase from 'camelcase';\nimport minimist from 'minimist';\n\nimport * as commands from './commands';\nimport doneError from './ui/done_error';\nimport doneSuccess from './ui/done_success';\nimport intro from './ui/intro';\n\n// parse options\nconst options = minimist(process.argv.slice(2));\n\nconst [commandRaw, environment] = options._;\n\nconst command = (\n  options.v ? 'version' :\n    commandRaw && camelCase(commandRaw)\n);\n\n// show intro\nintro();\n\n\nconst done = (error, message) => {\n  if (!error) {\n    doneSuccess(message);\n  } else {\n    doneError(error, message);\n  }\n};\n\nif (commands[command]) {\n  if (command !== 'init' && command !== 'version' && !environment) {\n    doneError(null, 'please specify an environment');\n  } else {\n    try {\n      commands[command](environment, done);\n    } catch (e) {\n      done(e, 'command failed');\n    }\n  }\n} else {\n  console.log('available commands: ');\n  console.log('');\n  console.log(_.keys(commands).join('\\n'));\n  done();\n}\n"]}