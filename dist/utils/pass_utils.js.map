{"version":3,"sources":["../../src/utils/pass_utils.js"],"names":[],"mappings":";;;;;;;;6BAA0B,eAAe;;sBAE3B,QAAQ;;;;sBACL,SAAS;;;;oBAET,QAAQ;;;;AAElB,IAAM,QAAQ,GAAG,SAAX,QAAQ;SAAS,uBAAK,eAAe,EAAE,EAAE,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;CAAA,CAAC;;AACxE,IAAM,QAAQ,GAAG,SAAX,QAAQ,GAAS;AAC5B,UAAQ,EAAE,CAAC;AACX,yBAAK,eAAe,EAAE,EAAE,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;CAClD,CAAC;;;AAEK,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAI,QAAQ,EAAK;AACpC,MAAI;AACF,YAAQ,EAAE,CAAC;AACX,WAAO,sCAAkB,QAAQ,EAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;GACzE,CAAC,OAAO,KAAK,EAAE;AACd,QAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC,EAAE;AAChE,aAAO,IAAI,CAAC;KACb;AACD,UAAM,KAAK,CAAC;GACb;CACF,CAAC;;;AAEK,IAAM,OAAO,GAAG,SAAV,OAAO,CAAG,QAAQ;SAAI,CAAC,oBAAE,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;CAAA,CAAC;;;AAE3D,IAAM,YAAY,GAAG,SAAf,YAAY,CAAI,QAAQ,EAAkB;MAAhB,MAAM,yDAAG,EAAE;;;AAEhD,+CAAyB,QAAQ,SAAI,MAAM,CAAG,CAAC;AAC/C,UAAQ,EAAE,CAAC;AACX,SAAO,QAAQ,CAAC,QAAQ,CAAC,CAAC;CAC3B,CAAC;;AACK,IAAM,YAAY,GAAG,SAAf,YAAY,CAAG,QAAQ;SAAI,oBAAK,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;CAAA,CAAC;;;AAEnE,IAAM,SAAS,GAAG,SAAZ,SAAS,CAAI,QAAQ,EAAE,KAAK,EAAK;AAC5C,SAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;AACzC,0CAAoB,QAAQ,UAAO,EAAE,KAAK,EAAL,KAAK,EAAE,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACrE,UAAQ,EAAE,CAAC;CACZ,CAAC;;;AAEK,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAI,QAAQ,EAAK;AACpC,UAAQ,EAAE,CAAC;AACX,gCAAU,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE;AACpC,SAAK,EAAE,SAAS;GACjB,CAAC,CAAC;AACH,UAAQ,EAAE,CAAC;CACZ,CAAC","file":"pass_utils.js","sourcesContent":["import { spawnSync } from 'child_process';\n\nimport _ from 'lodash';\nimport yaml from 'js-yaml';\n\nimport exec from './exec';\n\nexport const pullPass = () => exec('pass git pull', { stdio: ['pipe', 1, 2] });\nexport const pushPass = () => {\n  pullPass();\n  exec('pass git push', { stdio: ['pipe', 1, 2] });\n};\n\nexport const readPass = (passPath) => {\n  try {\n    pullPass();\n    return exec(`pass show ${passPath}`, { stdio: [0], encoding: 'utf-8' });\n  } catch (error) {\n    if (error.message.indexOf('is not in the password store') !== -1) {\n      return null;\n    }\n    throw error;\n  }\n};\n\nexport const hasPass = passPath => !_.isEmpty(readPass(passPath));\n\nexport const generatePass = (passPath, length = 32) => {\n  // generate without symbols\n  exec(`pass generate -n ${passPath} ${length}`);\n  pushPass();\n  return readPass(passPath);\n};\nexport const readPassYaml = passPath => yaml.safeLoad(readPass(passPath));\n\nexport const writePass = (passPath, input) => {\n  console.log('writing to pass', passPath);\n  exec(`pass insert ${passPath} -m`, { input, stdio: ['pipe', 1, 2] });\n  pushPass();\n};\n\nexport const editPass = (passPath) => {\n  pullPass();\n  spawnSync('pass', ['edit', passPath], {\n    stdio: 'inherit',\n  });\n  pushPass();\n};\n"]}