{"version":3,"sources":["../../src/build/exec_meteor_build.js"],"names":[],"mappings":";;;;;;;;;;sBAAc,QAAQ;;;;6BACG,eAAe;;kCACZ,wBAAwB;;8BACC,oBAAoB;;AAEzE,IAAM,qBAAqB,GAAG,SAAxB,qBAAqB,CAAI,IAAU,EAAK;MAAb,MAAM,GAAR,IAAU,CAAR,MAAM;;AACrC,4CAAmB,MAAM,CAAC,OAAO,GAAG,MAAM,GAAG,KAAK,CAAA,eAAY,EAAE,GAAG,EAAE,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;CACzG,CAAC;;qBAGa,UAAC,KAAgD,EAAgB;MAA9D,MAAM,GAAR,KAAgD,CAA9C,MAAM;MAAE,WAAW,GAArB,KAAgD,CAAtC,WAAW;iCAArB,KAAgD,CAAzB,kBAAkB;MAAlB,kBAAkB,4CAAG,EAAE;MAAI,IAAI,yDAAG,EAAE;;AACzE,MAAM,QAAQ,GAAG,qCAAY,EAAE,MAAM,EAAN,MAAM,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC;AACtD,MAAM,OAAO,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;;0BAEvB,OAAO,CAAzB,QAAQ;MAAR,QAAQ,qCAAG,EAAE;;AACrB,MAAM,uBAAuB,gBACxB,kBAAkB;AACrB,gBAAY,EAAE,4CAAuB;AACrC,eAAW,EAAE,oCAAe;KACzB,QAAQ,CACZ,CAAC;AACF,MAAM,cAAc,GAAG,oBAAE,GAAG,CAAC,uBAAuB,EAAE,UAAC,KAAK,EAAE,GAAG;WAAQ,GAAG,WAAK,KAAK;GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrG,uBAAqB,CAAC,EAAE,MAAM,EAAN,MAAM,EAAE,CAAC,CAAC;AAClC,+BACK,cAAc,sBAAiB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAa,OAAO,CAAC,GAAG,SAAI,QAAQ,EACpF,EAAE,GAAG,EAAE,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,CACzC,CAAC;CACH","file":"exec_meteor_build.js","sourcesContent":["import _ from 'lodash';\nimport { execSync } from 'child_process';\nimport { getBuildDir } from '../configs/directories';\nimport { getBuildNumberFromGit, getTagFromGit } from '../utils/git_utils';\n\nconst execInstallNpmModules = ({ config }) => {\n  execSync(`meteor ${config.useYarn ? 'yarn' : 'npm'} install`, { cwd: config.appDir, stdio: 'inherit' });\n};\n\n\nexport default ({ config, environment, additionalBuildEnv = {} }, args = []) => {\n  const buildDir = getBuildDir({ config, environment });\n  const envConf = config.environments[environment];\n  // read build params\n  const { buildEnv = {} } = envConf;\n  const buildEnvWithAppVersions = {\n    ...additionalBuildEnv,\n    BUILD_NUMBER: getBuildNumberFromGit(),\n    VERSION_TAG: getTagFromGit(),\n    ...buildEnv,\n  };\n  const buildEnvString = _.map(buildEnvWithAppVersions, (value, key) => `${key}='${value}'`).join(' ');\n  execInstallNpmModules({ config });\n  execSync(\n    `${buildEnvString} meteor build ${args.join(' ')} --server ${envConf.url} ${buildDir}`,\n    { cwd: config.appDir, stdio: 'inherit' },\n  );\n};\n"]}