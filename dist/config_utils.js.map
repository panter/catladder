{"version":3,"sources":["../src/config_utils.js"],"names":[],"mappings":";;;;;;;;kBAAe,IAAI;;;;sBACF,SAAS;;;;sBAEZ,QAAQ;;;;AAEf,IAAM,WAAW,GAAG,SAAd,WAAW,CAAI,UAAU,EAAE,MAAM,EAAK;AACjD,MAAM,OAAO,GAAG,oBAAK,QAAQ,CAAC,MAAM,CAAC,CAAC;AACtC,kBAAG,aAAa,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;CACvC,CAAC;;AACK,IAAM,UAAU,GAAG,SAAb,UAAU,CAAG,UAAU;SAAI,oBAAK,QAAQ,CAAC,gBAAG,YAAY,CAAC,UAAU,CAAC,CAAC;CAAA,CAAC;;;AAE5E,IAAM,YAAY,GAAG,SAAf,YAAY,CAAI,UAAU,EAAE,WAAW,EAAK;AACvD,MAAM,MAAM,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;AACtC,SAAO,oBAAE,IAAI,CACX,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,EAChC,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,CACpC,CAAC;CACH,CAAC;;;AAEK,IAAM,WAAW,GAAG,SAAd,WAAW,CAAI,IAAwB,EAAE,OAAO,EAAK;MAApC,WAAW,GAAb,IAAwB,CAAtB,WAAW;MAAE,OAAO,GAAtB,IAAwB,CAAT,OAAO;;AAChD,MAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAI,KAAK,EAAK;AACnC,QAAI,oBAAE,QAAQ,CAAC,KAAK,CAAC,EAAE;AACrB,aAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KAC9B;AACD,WAAO,KAAK,CAAC;GACd,CAAC;;AAEF,MAAM,IAAI,GAAG,oBAAE,IAAI,CAAC,oBAAE,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,EAAK;AAC3D,QAAM,KAAK,GAAG,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;;AAE9C,uBAAiB,GAAG,WAAK,KAAK,QAAI;GACnC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACd,MAAM,SAAS,qDAC4B,OAAO,yBACnC,WAAW,qDAGN,WAAW,uBAG9B,CAAC;AACF,SAAU,SAAS,UAAK,IAAI,CAAG;CAChC,CAAC","file":"config_utils.js","sourcesContent":["import fs from 'fs';\nimport yaml from 'js-yaml';\n\nimport _ from 'lodash';\n\nexport const writeConfig = (configFile, config) => {\n  const theyaml = yaml.safeDump(config);\n  fs.writeFileSync(configFile, theyaml);\n};\nexport const readConfig = configFile => yaml.safeLoad(fs.readFileSync(configFile));\n\nexport const getSshConfig = (configFile, environment) => {\n  const config = readConfig(configFile);\n  return _.pick(\n    config.environments[environment],\n    ['host', 'user', 'password', 'key'],\n  );\n};\n\nexport const createEnvSh = ({ environment, version }, envVars) => {\n  const getSanitziedValue = (value) => {\n    if (_.isObject(value)) {\n      return JSON.stringify(value);\n    }\n    return value;\n  };\n  // build is excluded, that is only used while building\n  const body = _.keys(_.omit(envVars, ['build'])).map((key) => {\n    const value = getSanitziedValue(envVars[key]);\n\n    return `export ${key}='${value}'`;\n  }).join('\\n');\n  const envHeader = `\n# autocreated with PANTER CATLADDER 🐱 🔧 v${version}\n# environment: ${environment}\n#\n# DO NOT EDIT, use\n# $ catladder setup ${environment}\n# to edit\n#\n  `;\n  return `${envHeader}\\n${body}`;\n};\n"]}