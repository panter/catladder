{"version":3,"sources":["../../src/actions/init.js"],"names":[],"mappings":";;;;;;;;;;sBAAmB,QAAQ;;;;kBAEZ,IAAI;;;;oBACF,MAAM;;;;qCAEI,2BAA2B;;iCACd,uBAAuB;;AAE/D,IAAM,UAAU,GAAG,iBAAiB,CAAC;;qBACtB,UAAC,EAAE,EAAE,IAAI,EAAK;AAC3B,MAAM,SAAS,GAAG,AAAC,gBAAG,UAAU,CAAC,UAAU,CAAC,IAAI,mCAAW,UAAU,CAAC,IAAK,EAAE,CAAC;AAC9E,sBAAO,KAAK,EAAE,CAAC;AACf,sBAAO,GAAG,CAAC,uCAAW,SAAS,CAAC,EAAE,UAAC,KAAK,EACpC,SAAS,EACN;AACL,QAAM,MAAM,gBACP,SAAS,EACT,SAAS,CACb,CAAC;AACF,wCAAY,UAAU,EAAE,MAAM,CAAC,CAAC;AAChC,QAAM,QAAQ,GAAG,kBAAK,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC/C,QAAI,CAAC,gBAAG,UAAU,CAAC,QAAQ,CAAC,EAAE;AAC5B,sBAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;KACxB;AACD,QAAI,CAAC,IAAI,eAAa,UAAU,CAAG,CAAC;GACrC,CAAC,CAAC;CACJ","file":"init.js","sourcesContent":["import prompt from 'prompt';\n\nimport fs from 'fs';\nimport path from 'path';\n\nimport { initSchema } from '../configs/prompt_schemas';\nimport { readConfig, writeConfig } from '../utils/config_utils';\n\nconst CONFIGFILE = '.catladder.yaml';\nexport default (__, done) => {\n  const configOld = (fs.existsSync(CONFIGFILE) && readConfig(CONFIGFILE)) || {};\n  prompt.start();\n  prompt.get(initSchema(configOld), (error,\n      configNew,\n    ) => {\n    const config = {\n      ...configOld,\n      ...configNew,\n    };\n    writeConfig(CONFIGFILE, config);\n    const buildDir = path.resolve(config.buildDir);\n    if (!fs.existsSync(buildDir)) {\n      fs.mkdirSync(buildDir);\n    }\n    done(null, `created ${CONFIGFILE}`);\n  });\n};\n"]}