{"version":3,"sources":["../../../src/deployments/panter-meteor-kubernetes/push.js"],"names":[],"mappings":";;;;;;;;kBAAe,IAAI;;;;yBAEiD,cAAc;;kCAC/B,2BAA2B;;iCACnD,0BAA0B;;8BAC7B,uBAAuB;;;;2BACvB,eAAe;;;;yBACtB,kBAAkB;;;;AAEnC,IAAM,gBAAgB,GAAG,SAAnB,gBAAgB,CAAI,IAAoC,EAAK;MAAvC,WAAW,GAAb,IAAoC,CAAlC,WAAW;MAAE,MAAM,GAArB,IAAoC,CAArB,MAAM;MAAE,WAAW,GAAlC,IAAoC,CAAb,WAAW;;AAC1D,MAAM,UAAU,GAAG,+CAAsB,EAAE,MAAM,EAAN,MAAM,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC;;AAElE,kBAAG,aAAa,CACd,UAAU,mBAEF,WAAW,2HAOpB,CAAC;AACF,SAAO,UAAU,CAAC;CACnB,CAAC;;;;;;;;;;;;AAYF,IAAM,cAAc,GAAG,SAAjB,cAAc,CAAI,KAAuB,EAAK;MAA1B,WAAW,GAAb,KAAuB,CAArB,WAAW;MAAE,MAAM,GAArB,KAAuB,CAAR,MAAM;;AAC3C,MAAM,QAAQ,GAAG,qCAAY,EAAE,WAAW,EAAX,WAAW,EAAE,MAAM,EAAN,MAAM,EAAE,CAAC,CAAC;AACtD,MAAM,qBAAqB,GAAM,QAAQ,8BAA2B,CAAC;AACrE,MAAM,aAAa,GAAG,qCAAY,qBAAqB,EAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;AAC9F,SAAO,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;CACvC,CAAC;;qBAEa,UAAC,WAAW,EAAE,IAAI,EAAK;AACpC,mFAA0D,WAAW,UAAO,CAAC;AAC7E,MAAM,MAAM,GAAG,oCAAY,CAAC;AAC5B,MAAM,aAAa,GAAG,4CAA4B,MAAM,EAAE,WAAW,CAAC,CAAC;;AAEvE,8CAAqB,aAAa,CAAG,CAAC;;wBAEF,MAAM,CAAlC,OAAO;MAAP,OAAO,mCAAG,aAAa;;AAC/B,MAAM,WAAW,GAAG,cAAc,CAAC,EAAE,WAAW,EAAX,WAAW,EAAE,MAAM,EAAN,MAAM,EAAE,CAAC,CAAC;AAC5D,SAAO,CAAC,GAAG,0BAAwB,WAAW,CAAG,CAAC;;AAElD,MAAM,UAAU,GAAG,gBAAgB,CAAC,EAAE,WAAW,EAAX,WAAW,EAAE,MAAM,EAAN,MAAM,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC;AAC1E,MAAM,QAAQ,GAAG,qCAAY,EAAE,WAAW,EAAX,WAAW,EAAE,MAAM,EAAN,MAAM,EAAE,CAAC,CAAC;AACtD,MAAM,kBAAkB,wBAAsB,OAAO,YAAO,UAAU,SAAI,QAAQ,AAAE,CAAC;;AAErF,8BAAK,kBAAkB,CAAC,CAAC;;AAEzB,yCAAuB,MAAM,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC;;AAE3D,8CAAmB,OAAO,SAAI,aAAa,CAAG,CAAC;AAC/C,yDAA8B,aAAa,CAAG,CAAC;;AAE/C,gCAAY,WAAW,EAAE,IAAI,CAAC,CAAC;CAChC","file":"push.js","sourcesContent":["import fs from 'fs';\n\nimport { generateKubernetesImageName, writeImageNameToConfig } from './libs/utils';\nimport { getBuildDir, getBuildDirDockerFile } from '../../configs/directories';\nimport { readConfig } from '../../utils/config_utils';\nimport actionTitle from '../../ui/action_title';\nimport applyConfig from './applyConfig';\nimport exec from '../../utils/exec';\n\nconst createDockerFile = ({ nodeVersion, config, environment }) => {\n  const dockerFile = getBuildDirDockerFile({ config, environment });\n\n  fs.writeFileSync(\n    dockerFile,\n    `\nFROM node:${nodeVersion}\nADD bundle /app\nRUN cd /app/programs/server && npm install\nWORKDIR /app\nEXPOSE 8888\nCMD [\"node\", \"main.js\"]\n  `,\n  );\n  return dockerFile;\n};\n/* todo generate dockerfile and pipe in * */\n/*\nconst dockerFile = `\n  FROM node:4.8.4\n  ADD build/production/app.tar.gz /app\n  RUN cd /app/bundle/programs/server && npm install\n  WORKDIR /app/bundle\n  EXPOSE 8888\n  CMD [\"node\", \"main.js\"]\n` */\n\nconst getNodeVersion = ({ environment, config }) => {\n  const buildDir = getBuildDir({ environment, config });\n  const meteorNodeVersionFile = `${buildDir}/bundle/.node_version.txt`;\n  const versionString = exec(`cat ${meteorNodeVersionFile}`, { stdio: [0], encoding: 'utf-8' });\n  return versionString.replace('v', '');\n};\n\nexport default (environment, done) => {\n  actionTitle(`  ðŸŽ¶    ðŸ‘Š   push it real good ! ðŸ‘Š   ðŸŽ¶   ${environment} ðŸŽ¶ `);\n  const config = readConfig();\n  const fullImageName = generateKubernetesImageName(config, environment);\n\n  actionTitle(`image ${fullImageName}`);\n\n  const { appname = 'unknown app' } = config;\n  const nodeVersion = getNodeVersion({ environment, config });\n  console.log(`using node version: ${nodeVersion}`);\n  // const nodeVersion = '8.9.1';\n  const dockerFile = createDockerFile({ nodeVersion, config, environment });\n  const buildDir = getBuildDir({ environment, config });\n  const dockerBuildCommand = `docker build -t ${appname} -f ${dockerFile} ${buildDir}`;\n\n  exec(dockerBuildCommand);\n\n  writeImageNameToConfig(config, environment, fullImageName);\n\n  exec(`docker tag ${appname} ${fullImageName}`);\n  exec(`gcloud docker -- push ${fullImageName}`);\n\n  applyConfig(environment, done);\n};\n"]}