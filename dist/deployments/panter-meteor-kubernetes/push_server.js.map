{"version":3,"sources":["../../../src/deployments/panter-meteor-kubernetes/push_server.js"],"names":[],"mappings":"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","file":"push_server.js","sourcesContent":["import { execSync } from 'child_process';\nimport fs from 'fs';\n\nimport { template } from 'lodash';\n\nimport { getBuildDir, getBuildDirDockerFile, passEnvFile } from '../../configs/directories';\nimport { getFullVersionString } from '../../utils/git_utils';\nimport { readConfig } from '../../utils/config_utils';\nimport { readPassYaml } from '../../utils/pass_utils';\n\nconst createDockerFile = ({ config, environment }) => {\n  const dockerFile = getBuildDirDockerFile({ config, environment });\n  fs.writeFileSync(\n    dockerFile,\n    `\nFROM node:4.8.4\nADD app.tar.gz /app\nRUN cd /app/bundle/programs/server && npm install\nWORKDIR /app/bundle\nEXPOSE 8888\nCMD [\"node\", \"main.js\"]\n  `,\n  );\n  return dockerFile;\n};\n/* todo generate dockerfile and pipe in * */\n/*\nconst dockerFile = `\n  FROM node:4.8.4\n  ADD build/production/app.tar.gz /app\n  RUN cd /app/bundle/programs/server && npm install\n  WORKDIR /app/bundle\n  EXPOSE 8888\n  CMD [\"node\", \"main.js\"]\n` */\n\nconst exec = (cmd) => {\n  console.log(cmd);\n  execSync(cmd, { stdio: 'inherit' });\n};\nexport default (environment, done) => {\n  const config = readConfig();\n  const passPathForEnvVars = passEnvFile({ config, environment });\n  const passEnv = readPassYaml(passPathForEnvVars);\n  const { dockerEndPoint = 'gcr.io/skynet-164509', appname = 'unknown app' } = config;\n  console.log('would do the following if implemented: ');\n  console.log('(but you can do it manually! ðŸ˜½  )');\n  console.log('  ');\n\n  const dockerFile = createDockerFile({ config, environment });\n  console.log(dockerFile);\n  const buildDir = getBuildDir({ environment, config });\n  const dockerBuildCommand = `docker build -t ${appname} -f ${dockerFile} ${buildDir}`;\n\n  // exec(dockerBuildCommand);\n\n  const versionTag = getFullVersionString(environment);\n  const fullImageName = `${dockerEndPoint}/${appname}:${versionTag}`;\n  // exec(`docker tag ${appname} ${fullImageName}`);\n  // exec(`gcloud docker -- push ${fullImageName}`);\n\n  const {\n    url,\n    deployment: { env: commonDeploymentEnv, kubeDeployments = [] },\n  } = config.environments[environment];\n\n  kubeDeployments.forEach((deployment) => {\n    const { file, env: deploymentEnv = {} } = deployment;\n    const compiled = template(fs.readFileSync(file));\n    const fullEnv = {\n      ...passEnv,\n      ROOT_URL: url,\n      ...commonDeploymentEnv,\n      ...deploymentEnv,\n    };\n    const yaml = compiled({\n      image: fullImageName,\n      env: JSON.stringify(fullEnv),\n    });\n    console.log('would apply');\n    console.log(yaml);\n  });\n\n  console.log(\n    `generate or adjust: kube/${environment}/deployment.${appname}_worker.yml (add tag ${versionTag})`,\n  );\n  console.log(\n    `generate or adjust: kube/${environment}/deployment.${appname}_web.yml (add tag ${versionTag})`,\n  );\n  console.log(`kubectl apply -f kube/${environment}/deployment.${appname}_worker.yml`);\n  console.log(`kubectl apply -f kube/${environment}/deployment.${appname}_web.yml`);\n  done(null, 'done');\n};\n"]}