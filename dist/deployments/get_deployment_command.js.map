{"version":3,"sources":["../../src/deployments/get_deployment_command.js"],"names":[],"mappings":";;;;;;;;sBAAqB,QAAQ;;iCAEF,uBAAuB;;gBAC1B,IAAI;;;;qBAEb,UAAC,WAAW,EAAE,OAAO,EAAK;AACvC,MAAM,MAAM,GAAG,oCAAY,CAAC;MACpB,UAAU,GAAK,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAA/C,UAAU;;AAClB,MAAI,CAAC,UAAU,EAAE;AACf,WAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AACxC,WAAO;GACR;;aACgB,UAAU,IAAI,EAAE;;MAAzB,IAAI,QAAJ,IAAI;;AACZ,MAAM,iBAAiB,GAAG,kBAAK,cAAY,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7D,MAAI,cAAY,IAAI,CAAC,EAAE;AACrB,QAAI,cAAY,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE;AAC9B,aAAO,cAAY,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;KACnC;AACD,UAAM,IAAI,KAAK,iCACiB,OAAO,iBAAY,IAAI,8BAAyB,iBAAiB,CAChG,CAAC;GACH,MAAM;AACL,UAAM,IAAI,KAAK,8BAA4B,IAAI,8BAAyB,iBAAiB,CAAG,CAAC;GAC9F;CACF","file":"get_deployment_command.js","sourcesContent":["import { keys } from 'lodash';\n\nimport { readConfig } from '../utils/config_utils';\nimport deployments from './';\n\nexport default (environment, command) => {\n  const config = readConfig();\n  const { deployment } = config.environments[environment];\n  if (!deployment) {\n    console.log('no deployment configured');\n    return;\n  }\n  const { type } = deployment || {};\n  const availableCommands = keys(deployments[type]).join(', ');\n  if (deployments[type]) {\n    if (deployments[type][command]) {\n      return deployments[type][command];\n    }\n    throw new Error(\n      `Unkown deployment-command: ${command} in type ${type}. Available commands: ${availableCommands}`,\n    );\n  } else {\n    throw new Error(`Unkown deployment-type: ${type}. Available commands: ${availableCommands}`);\n  }\n};\n"]}