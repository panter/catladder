{"version":3,"sources":["../../../src/deployments/panter-meteor-classic/applyConfig.js"],"names":[],"mappings":";;;;;;;;;;uBAAuB,UAAU;;;;iCAEqB,0BAA0B;;kCACpD,2BAA2B;;+BAC1B,wBAAwB;;2BAC7B,uBAAuB;;8BACvB,uBAAuB;;;;AAE/C,IAAM,UAAU,GAAG,iBAAiB,CAAC;;qBACtB,UAAC,WAAW,EAAE,IAAI,EAAK;AACpC,qDAA4B,WAAW,CAAG,CAAC;AAC3C,MAAM,MAAM,GAAG,oCAAY,CAAC;AAC5B,MAAM,kBAAkB,GAAG,qCAAY,EAAE,MAAM,EAAN,MAAM,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC;;;AAGhE,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AACtC,MAAM,KAAK,GAAG,oCACZ,EAAE,OAAO,sBAAA,EAAE,WAAW,EAAX,WAAW,EAAE,eAEnB,mCAAa,kBAAkB,CAAC;AACnC,YAAQ,EAAE,SAAS,CAAC,GAAG;KAE1B,CAAC;;AAEF,uCACW,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,uBACnC,qCAAa,UAAU,EAAE,WAAW,CAAC,EACrC,UAAC,GAAG,EAAK;AACP,QAAI,GAAG,EAAE;AACP,YAAM,GAAG,CAAC;KACX;AACD,WAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAChB,WAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;AAChE,QAAI,CAAC,IAAI,EAAK,WAAW,uCAAoC,CAAC;GAC/D,CACF,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;CACxB","file":"applyConfig.js","sourcesContent":["import remoteExec from 'ssh-exec';\n\nimport { createEnvSh, getSshConfig, readConfig } from '../../utils/config_utils';\nimport { passEnvFile } from '../../configs/directories';\nimport { readPassYaml } from '../../utils/pass_utils';\nimport { version } from '../../../package.json';\nimport actionTitle from '../../ui/action_title';\n\nconst CONFIGFILE = '.catladder.yaml';\nexport default (environment, done) => {\n  actionTitle(`apply config ${environment}`);\n  const config = readConfig();\n  const passPathForEnvVars = passEnvFile({ config, environment });\n  // load changed envVars and create env.sh on server\n  // we create ROOT_URL always from the config\n  const envConfig = config[environment];\n  const envSh = createEnvSh(\n    { version, environment },\n    {\n      ...readPassYaml(passPathForEnvVars),\n      ROOT_URL: envConfig.url,\n    },\n  );\n  // create env.sh on server\n  remoteExec(\n    `echo \"${envSh.replace(/\"/g, '\\\\\"')}\" > ~/app/env.sh`,\n    getSshConfig(CONFIGFILE, environment),\n    (err) => {\n      if (err) {\n        throw err;\n      }\n      console.log('');\n      console.log('~/app/env.sh has ben written on ', envConfig.host);\n      done(null, `${environment} is set up, please restart server`);\n    },\n  ).pipe(process.stdout);\n};\n"]}