{"version":3,"sources":["../../src/commands/build_apps.js"],"names":[],"mappings":";;;;;;;;kBAAe,IAAI;;;;sBAEA,QAAQ;;;;kCAEsC,wBAAwB;;kCACnC,wBAAwB;;8BACC,oBAAoB;;iCACxE,uBAAuB;;+BACd,qBAAqB;;8BACjC,oBAAoB;;;;yCACT,6BAA6B;;;;sCACpC,4BAA4B;;;;kCAC3B,sBAAsB;;;;qBAEpC,UAAC,WAAW,EAAE,IAAI,EAAK;AACpC,MAAM,MAAM,GAAG,oCAAY,CAAC;AAC5B,MAAM,QAAQ,GAAG,qCAAY,EAAE,MAAM,EAAN,MAAM,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC;AACtD,6DAAoC,0CAAqB,WAAW,CAAC,CAAG,CAAC;;AAEzE,SAAO,CAAC,GAAG,iBAAe,QAAQ,CAAG,CAAC;;;;AAItC,4CAAoB,WAAW,CAAC,CAAC;;;;AAIjC,MAAI,gBAAG,UAAU,CAAC,sDAA6B,EAAE,MAAM,EAAN,MAAM,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC,EAAE;AACxE,wBAAO,IAAI,CAAC,sDAA6B,EAAE,MAAM,EAAN,MAAM,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC,CAAC;GACpE;AACD,MAAI,gBAAG,UAAU,CAAC,kDAAyB,EAAE,MAAM,EAAN,MAAM,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC,EAAE;AACpE,wBAAO,IAAI,CAAC,kDAAyB,EAAE,MAAM,EAAN,MAAM,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC,CAAC;GAChE;AACD,MAAM,kBAAkB,GAAG;AACzB,4BAAwB,EAAE,4CAAuB;AACjD,uBAAmB,EAAE,wCAAmB;GACzC,CAAC;AACF,2CAAgB,EAAE,MAAM,EAAN,MAAM,EAAE,WAAW,EAAX,WAAW,EAAE,kBAAkB,EAAlB,kBAAkB,EAAE,CAAC,CAAC;;;AAG7D,uCAAiB,WAAW,EAAE,MAAM,CAAC,CAAC;;;AAGtC,MAAI,gBAAG,UAAU,CAAC,4CAAmB,EAAE,MAAM,EAAN,MAAM,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC,EAAE;AAC9D,gDAAuB,WAAW,EAAE,IAAI,CAAC,CAAC;GAC3C,MAAM;AACL,QAAI,CAAC,IAAI,uBAAqB,QAAQ,CAAG,CAAC;GAC3C;CACF","file":"build_apps.js","sourcesContent":["import fs from 'fs';\n\nimport rimraf from 'rimraf';\n\nimport { getAndroidBuildDir, getAndroidBuildProjectFolder } from '../build/android_build';\nimport { getBuildDir, getIosBuildProjectFolder } from '../configs/directories';\nimport { getBuildNumberFromGit, getFullVersionString, getVersionFromTag } from '../utils/git_utils';\nimport { readConfig } from '../utils/config_utils';\nimport { readEnvFileFromPass } from '../utils/pass_utils';\nimport actionTitle from '../ui/action_title';\nimport androidPrepareForStore from './android_prepare_for_store';\nimport execMeteorBuild from '../build/exec_meteor_build';\nimport iosRevealProject from './ios_reveal_project';\n\nexport default (environment, done) => {\n  const config = readConfig();\n  const buildDir = getBuildDir({ config, environment });\n  actionTitle(`building mobile apps ${getFullVersionString(environment)}`);\n\n  console.log(`build dir: ${buildDir}`);\n\n  // read it so that it asks for password\n  // otherwise it asks in the middle of the build, which can take some minutes\n  readEnvFileFromPass(environment);\n\n  // remove project folders if existing\n  // otherwise apps might get bloated with old code\n  if (fs.existsSync(getAndroidBuildProjectFolder({ config, environment }))) {\n    rimraf.sync(getAndroidBuildProjectFolder({ config, environment }));\n  }\n  if (fs.existsSync(getIosBuildProjectFolder({ config, environment }))) {\n    rimraf.sync(getIosBuildProjectFolder({ config, environment }));\n  }\n  const additionalBuildEnv = {\n    CORDOVA_APP_BUILD_NUMBER: getBuildNumberFromGit(),\n    CORDOVA_APP_VERSION: getVersionFromTag(),\n  };\n  execMeteorBuild({ config, environment, additionalBuildEnv });\n\n  // open ios project if exists\n  iosRevealProject(environment, config);\n\n  // init android if it exists\n  if (fs.existsSync(getAndroidBuildDir({ config, environment }))) {\n    androidPrepareForStore(environment, done);\n  } else {\n    done(null, `apps created in ${buildDir}`);\n  }\n};\n"]}