{"version":3,"sources":["../../src/commands/ios_reveal_project.js"],"names":[],"mappings":";;;;;;;;kBAAe,IAAI;;;;kCAEsB,wBAAwB;;iCACtC,uBAAuB;;yBACjC,eAAe;;;;qBAEjB,UAAC,WAAW,EAAE,IAAI,EAAK;AACpC,MAAM,MAAM,GAAG,oCAAY,CAAC;AAC5B,MAAI,gBAAG,UAAU,CAAC,kDAAyB,EAAE,MAAM,EAAN,MAAM,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC,EAAE;AACpE,0CAAa,kDAAyB,EAAE,MAAM,EAAN,MAAM,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAG,CAAC;GACnE,MAAM;AACL,QAAI,CACF,IAAI,wCACgC,kDAAyB,EAAE,MAAM,EAAN,MAAM,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CACtF,CAAC;GACH;CACF","file":"ios_reveal_project.js","sourcesContent":["import fs from 'fs';\n\nimport { getIosBuildProjectFolder } from '../configs/directories';\nimport { readConfig } from '../utils/config_utils';\nimport exec from '../utils/exec';\n\nexport default (environment, done) => {\n  const config = readConfig();\n  if (fs.existsSync(getIosBuildProjectFolder({ config, environment }))) {\n    exec(`open ${getIosBuildProjectFolder({ config, environment })}`);\n  } else {\n    done(\n      null,\n      `ios project does not exist under ${getIosBuildProjectFolder({ config, environment })}`,\n    );\n  }\n};\n"]}